{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b08e96b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the First Number:1\n",
      "Entered Value: 1.0\n",
      "Enter operator: + , - , * , / , ^+\n",
      "Entered Operator: +\n",
      "Enter Second Number3\n",
      "Entered val: 3.0\n",
      "Result: 4.0\n"
     ]
    }
   ],
   "source": [
    "a=float(input('Enter the First Number:'))\n",
    "print('Entered Value:',a)\n",
    "\n",
    "x=input('Enter operator: + , - , * , / , ^')\n",
    "print('Entered Operator:',x)\n",
    "\n",
    "b=float(input('Enter Second Number'))\n",
    "print('Entered val:',b)\n",
    "\n",
    "def calculate (a,b,x):\n",
    "    if x=='+':\n",
    "        y=a+b\n",
    "\n",
    "    elif x=='-':\n",
    "        y=a-b\n",
    "\n",
    "    elif x=='*':\n",
    "        y=a*b\n",
    "\n",
    "    elif x==\"/\":\n",
    "        y=a/b\n",
    "\n",
    "    elif x=='^':\n",
    "        y=a^b\n",
    "        \n",
    "    \n",
    "\n",
    "    return y\n",
    "\n",
    "y=calculate(a,b,x)\n",
    "\n",
    "print('Result:',y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07dd5e35",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
